## DO NOT RUN THIS DIRECTLY
## IT IS MEANT TO BE INCLUDED BY OTHER SCRIPTS
if [ -z "${DISTRIBUTION}" ]; then
    echo "Internal error: \$DISTRIBUTION was not set"
    exit 1
fi

function usage()
{
    echo "This tool prepares the debian directory for a snapshot for ${DISTRIBUTION}"
    echo ""
    echo "Usage $0 [--append] <stp git repo root>"
    echo ""
    echo "--append Append to changelog rather than creating a new log"
    exit 1
}

if [ $# -lt 1 ]; then
    echo "At least one argument must be specified"
    usage
fi

# Parent scripts set this
#DISTRIBUTION=""
APPEND=0

while [ -n "$1" ]; do
    if [ $# -gt 1 ] || [ $( echo "$1" | grep -Ec '^(-h|--help)$' ) -eq 1 ]; then
        case "$1" in
            --create)
                APPEND=1
            ;;
            -h | --help)
                usage
            ;;
            *)
                echo "Unrecognised argument \"$1\""
                usage
            ;;
        esac

    else
        if [ ! -d "$1" ]; then
            echo "\"$1\" is not a directory"
            usage
        fi
        STP_GIT_DIR="$(cd "$1" ; pwd)"
    fi

    shift
done

SCRIPT_DIR="$( cd ${BASH_SOURCE[0]%/*} ; echo "$PWD" )"


# sanity check
if [ ! -d "${STP_GIT_DIR}/.git" ]; then
    echo "\"$1\" does not seem to be a git repository"
    exit 1
fi

if [ -z "${DEBFULLNAME}" -o -z "${DEBEMAIL}" ]; then
    # Get the name and email from git
    echo "DEBFULLNAME or DEBEMAIL weren't set so trying to get values from git config"
    export DEBFULLNAME=$(cd "${STP_GIT_DIR}" && git config --get user.name)
    export DEBEMAIL=$(cd "${STP_GIT_DIR}" && git config --get user.email)

    if [ -z "${DEBFULLNAME}" ]; then
        echo "Failed to get user.name from git config. Have you set it?"
    fi

    if [ -z "${DEBEMAIL}" ]; then
        echo "Failed to get user.email from git config. Have you set it?"
    fi
fi
echo "DEBFULLNAME=${DEBFULLNAME}"
echo "DEBEMAIL=${DEBEMAIL}"


# Check the repo is clean
STATUS=$( cd "${STP_GIT_DIR}" && git status --porcelain || echo fail)

if [ -n "${STATUS}" ]; then
    echo "STP git repo is not clean"
    echo ""
    echo "${STATUS}"
    exit 1
fi

# Check there is no existing debian directory symlink
if [ -a "${STP_GIT_DIR}/debian" ]; then
    echo "a file within the STP source root with the name debian exists"
    exit 1
fi


VERSION="1.0+1SNAPSHOT$(date +%Y%m%d)"
NAME="stp_${VERSION}.orig.tar.bz2"
FULL_VERSION="${VERSION}-0~${DISTRIBUTION}1"
echo "Creating snapshot for ${FULL_VERSION}"

echo "Generating tarball"
cd "${STP_GIT_DIR}"
git archive --format=tar HEAD | bzip2 > ../${NAME}


# Adjust changelog
cd "${SCRIPT_DIR}/${DISTRIBUTION}"


if [ $APPEND -eq 0 ]; then
    rm -v "debian/changelog"
    echo "Creating new package changelog with a single entry"
    CREATE_ARG="--create"
else
    echo "Adding package changelog entry"
    CREATE_ARG="--mainmaint"
fi
dch  ${CREATE_ARG} --package=stp --urgency low --distribution ${DISTRIBUTION} --newversion="${FULL_VERSION}" "New snapshot"


# Copy over debian directory
echo "Copying debian directory to \"${STP_GIT_DIR}\""
cp -r --dereference ${SCRIPT_DIR}/${DISTRIBUTION}/debian ${STP_GIT_DIR}/
